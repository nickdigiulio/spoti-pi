[{"/Users/nickdigiulio/Workspace/spoti-pi/src/index.js":"1","/Users/nickdigiulio/Workspace/spoti-pi/src/App.js":"2","/Users/nickdigiulio/Workspace/spoti-pi/src/reportWebVitals.js":"3","/Users/nickdigiulio/Workspace/spoti-pi/src/polyfill.js":"4","/Users/nickdigiulio/Workspace/spoti-pi/src/redux/store.js":"5","/Users/nickdigiulio/Workspace/spoti-pi/src/redux/rootReducer.js":"6","/Users/nickdigiulio/Workspace/spoti-pi/src/redux/trackInfo.js":"7","/Users/nickdigiulio/Workspace/spoti-pi/src/containers/Layout.js":"8","/Users/nickdigiulio/Workspace/spoti-pi/src/containers/index.js":"9","/Users/nickdigiulio/Workspace/spoti-pi/src/containers/Content.js":"10","/Users/nickdigiulio/Workspace/spoti-pi/src/routes.js":"11","/Users/nickdigiulio/Workspace/spoti-pi/src/views/Clock.js":"12","/Users/nickdigiulio/Workspace/spoti-pi/src/views/Connect.js":"13","/Users/nickdigiulio/Workspace/spoti-pi/src/views/NowPlaying.js":"14","/Users/nickdigiulio/Workspace/spoti-pi/src/redux/auth.js":"15","/Users/nickdigiulio/Workspace/spoti-pi/src/containers/PlayStatus.js":"16","/Users/nickdigiulio/Workspace/spoti-pi/src/redux/background.js":"17"},{"size":258,"mtime":1610922830154,"results":"18","hashOfConfig":"19"},{"size":669,"mtime":1611033442297,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610922088573,"results":"21","hashOfConfig":"19"},{"size":1429,"mtime":1610922813695,"results":"22","hashOfConfig":"19"},{"size":842,"mtime":1610989722234,"results":"23","hashOfConfig":"19"},{"size":317,"mtime":1611031152695,"results":"24","hashOfConfig":"19"},{"size":3034,"mtime":1611990249658,"results":"25","hashOfConfig":"19"},{"size":195,"mtime":1611029162951,"results":"26","hashOfConfig":"19"},{"size":149,"mtime":1611011940437,"results":"27","hashOfConfig":"19"},{"size":2941,"mtime":1611033590570,"results":"28","hashOfConfig":"19"},{"size":585,"mtime":1611029970381,"results":"29","hashOfConfig":"19"},{"size":3510,"mtime":1612067326178,"results":"30","hashOfConfig":"19"},{"size":702,"mtime":1611097484432,"results":"31","hashOfConfig":"19"},{"size":3717,"mtime":1611968822492,"results":"32","hashOfConfig":"19"},{"size":827,"mtime":1611969171802,"results":"33","hashOfConfig":"19"},{"size":342,"mtime":1611029482995,"results":"34","hashOfConfig":"19"},{"size":588,"mtime":1611100925423,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"141bnui",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/nickdigiulio/Workspace/spoti-pi/src/index.js",[],["75","76"],"/Users/nickdigiulio/Workspace/spoti-pi/src/App.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/reportWebVitals.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/polyfill.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/redux/store.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/redux/rootReducer.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/redux/trackInfo.js",["77","78","79","80"],"const INIT_GET_TRACK_INFO = \"INIT_GET_TRACK_INFO\";\nconst SET_TRACK_INFO = \"SET_TRACK_INFO\";\nconst GET_TRACK_INFO_FAILED = \"GET_TRACK_INFO_FAILED\";\nconst SET_PLAYBACK_STATUS = \"SET_PLAYBACK_STATUS\";\n\n\n// Action Reducer\nconst initState = {\n  loading: false,\n  track: {\n    album: {\n      name: 'Loading',\n      images: [\n        {\n          url: '../mstile-150x150.png'\n        }\n      ]\n    },\n    name: 'Loading',\n    artists: [\n      {\n        name: 'Now'\n      }\n    ]\n  },\n  isPlaying: false\n}\n\nconst trackInfoReducer = (state = initState, action) => {\n  switch(action.type){\n    case INIT_GET_TRACK_INFO:\n      return {\n        ...state,\n        loading: true\n      }\n\n    case SET_TRACK_INFO:\n      return {\n        ...state,\n        loading:false,\n        track: {...action.payload},\n      }\n\n    case SET_PLAYBACK_STATUS:\n      return {\n        ...state,\n        loading:false,\n        isPlaying: action.payload,\n      }\n\n    case GET_TRACK_INFO_FAILED:\n        return initState\n\n    default:\n      return state\n  }\n};\n\nconst backendUrl = process.env.REACT_APP_ENV === 'dev' ? 'http://localhost:5050' : 'https://nowify-api.nickdigiulio.com';\nconsole.log(backendUrl);\n\nexport const getMyCurrentPlayingTrack = () => {\n  return (dispatch) => {\n    dispatch({type: INIT_GET_TRACK_INFO})\n    let fetchFailed = false;\n    const intervalid = setInterval(async function(){\n      const response = fetch(backendUrl + '/now_playing')\n        .then((response) => {\n          if ( response.status == 200 ) {\n            response.json().then((data) => {\n              if ( Object.keys(data).length > 0 ) {\n                dispatch({type: SET_TRACK_INFO, payload: data.item});\n                dispatch({type: SET_PLAYBACK_STATUS, payload: data.is_playing});\n              } else {\n                dispatch({type: SET_PLAYBACK_STATUS, payload: false});\n              }\n            }).catch((err) => {\n              console.log(\"couldn't parse response\");\n              console.log(err);\n            })\n          } else if ( response.status == 404 ) {\n            console.log(\"recieved 404 while fetching track info\");\n            fetch(backendUrl + '/refresh')\n            .then(() => {\n                console.log(\"refreshed token\");\n            }).catch((err) => {\n              console.log(\"couldn't refresh token: \"+err);\n            })\n          }\n        }).catch((err) => {\n          console.log(err);\n        })\n    }, 2000);\n    if ( fetchFailed ) {\n      console.log(\"fetch failed\");\n      clearInterval(intervalid);\n    }\n  }\n}\n\n\nexport const trackAction = (action) => {\n  return (dispatch) => {\n    console.log(\"action: \"+action);\n    const response = fetch(backendUrl + '/' + action)\n      .then((response) => {\n        response.json()\n          .then((data) => {\n            dispatch({type: SET_TRACK_INFO, payload: data.item});\n            dispatch({type: SET_PLAYBACK_STATUS, payload: data.is_playing});\n          }).catch((err) => {\n            console.log(err);\n          })\n      })\n  };\n}\n\nexport default trackInfoReducer;\n","/Users/nickdigiulio/Workspace/spoti-pi/src/containers/Layout.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/containers/index.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/containers/Content.js",["81"],"import React, { Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\n// routes config\nimport routes from \"../routes\";\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n);\n\n// There is not a React hook equivalent of componentDidCatch()\n// which is why Class component is being used instead of functional component\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n    this.dispatch = props.dispatch;\n    this.history = props.history;\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidMount() {\n    // This is needed to clear the state when history has been changed\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.state.hasError) {\n        this.setState({ hasError: false });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log the error to an error reporting service\n    console.log(error);\n    console.log(errorInfo);\n  }\n\n  render() {\n\n    if (this.state.hasError) {\n      return (\n        <>\n          <h1 className=\"display-3\">\n            <span style={{ fontSize: \"2.5rem\", display: \"flex\", justifyContent: \"center\"}}>\n              Oops! Something went wrong.\n            </span>\n          </h1>\n          <p className=\"lead\">\n            <span style={{ color: \"#3c4b64\", display: \"flex\", justifyContent: \"center\" }}>\n              Please log out and try again. If the problem persists, please\n              contact us.\n            </span>\n          </p>\n        </>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Content = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const bgColor = useSelector((state) => state.background.background);\n  return (\n    <main className=\"wrapper\" id=\"background\" style={{ background: bgColor }}>\n      <Suspense fallback={<h1>waiting</h1>}>\n        <ErrorBoundary dispatch={dispatch} history={history}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return (\n                route.component && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    render={(props) => (\n                      <route.component {...props} />\n                    )}\n                  />\n                )\n              );\n            })}\n            <Redirect from=\"/\" to=\"/connect\" />\n          </Switch>\n        </ErrorBoundary>\n      </Suspense>\n    </main>\n  );\n};\n\nexport default React.memo(Content);\n","/Users/nickdigiulio/Workspace/spoti-pi/src/routes.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/views/Clock.js",["82"],"import React, { useState, useLayoutEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { SET_BACKGROUND_COLOR, SET_FRAME_SIZE } from \"../redux/background\";\nvar moment = require('moment');\n\nconst Clock = () => {\n    const ref = useRef(null);\n    const [time, setTime] = useState(moment().format('h:mm A'));\n    const [color, setColor] = useState(\"#fff\");\n    const [position, setPosition] = useState({\n      x: 0,\n      y: 0\n    });\n    const [speed, setSpeed] = useState({\n      x: 1,\n      y: 1\n    });\n    const [timeSize, setTimeSize] = useState({\n      height: 0,\n      width: 0\n    })\n\n    const isPlaying = useSelector((state) => state.trackInfo.isPlaying);\n    const windowSize = useSelector((state) => state.background.windowSize);\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    if ( isPlaying ) {\n      history.push(\"/now_playing\");\n    }\n\n    const updateTime = function () {\n        setTime(moment().format('h:mm A'));\n    };\n\n    const updateColor = function () {\n      setColor(pickColor());\n    };\n\n    const updatePosition = function () {\n      let newPosition = {\n        x: position.x += speed.x,\n        y: position.y += speed.y,\n      }\n      setPosition(newPosition);\n      checkForEdge();\n    };\n\n    const checkForEdge = () => {\n      let newSpeed = speed;\n      if ( position.x >= windowSize.width - timeSize.width - 5 || position.x <= 0 ) {\n        newSpeed.x = speed.x * -1;\n        setSpeed(newSpeed);\n        updateColor();\n      }\n      if ( position.y >= windowSize.height - timeSize.height - 5 || position.y <= 0 ) {\n        newSpeed.y = speed.y * -1\n        setSpeed(newSpeed);\n        updateColor();\n      }\n    }\n\n    useLayoutEffect(() => {\n      // set background color\n      dispatch({type: SET_BACKGROUND_COLOR, payload: { background: \"#000\" }})\n      //\n      const handleResize = () => {\n        // Set window width/height to state\n        dispatch({\n          type: SET_FRAME_SIZE,\n          payload: {\n            width: window.innerWidth,\n            height: window.innerHeight\n          }\n        });\n        // set the time element size\n        setTimeSize({\n          height: ref.current.offsetHeight,\n          width: ref.current.offsetWidth\n        })\n      }\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      // start the time update process\n      updateTime();\n      const timeIntervalId = setInterval(updateTime, 1000);\n\n      // start the time movement process\n      updatePosition();\n      const positionIntervalId = setInterval(updatePosition, 10);\n\n      // stop the movement on tear down\n      return () => {\n        // stop intervals\n        clearInterval(timeIntervalId);\n        clearInterval(positionIntervalId);\n        window.removeEventListener(\"resize\", handleResize);\n      }\n    }, [dispatch, ref.current]);\n\n    const divStyle = {\n      position: 'absolute',\n      left: position.x+'px',\n      top: position.y+'px',\n      margin: 0,\n    \tpadding: 0,\n    \tborder: 0\n  }\n\n    return (\n      <div className=\"clockWrapper\" style={divStyle}>\n          <h1 ref={ref} className=\"clock\" style={{color: color}}>{time}</h1>\n      </div>\n    )\n};\n\n//Pick a random color in RGB format\nfunction pickColor(){\n    const r = Math.random() * (254 - 0) + 0;\n    const g = Math.random() * (254 - 0) + 0;\n    const b = Math.random() * (254 - 0) + 0;\n    return 'rgb('+r+','+g+', '+b+')';\n}\n\nexport default Clock;\n","/Users/nickdigiulio/Workspace/spoti-pi/src/views/Connect.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/views/NowPlaying.js",[],["83","84"],"/Users/nickdigiulio/Workspace/spoti-pi/src/redux/auth.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/containers/PlayStatus.js",[],"/Users/nickdigiulio/Workspace/spoti-pi/src/redux/background.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":67,"column":13,"nodeType":"91","messageId":"92","endLine":67,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":69,"column":32,"nodeType":"95","messageId":"96","endLine":69,"endColumn":34},{"ruleId":"93","severity":1,"message":"94","line":81,"column":39,"nodeType":"95","messageId":"96","endLine":81,"endColumn":41},{"ruleId":"89","severity":1,"message":"90","line":105,"column":11,"nodeType":"91","messageId":"92","endLine":105,"endColumn":19},{"ruleId":"89","severity":1,"message":"97","line":9,"column":7,"nodeType":"91","messageId":"92","endLine":9,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":101,"column":8,"nodeType":"100","endLine":101,"endColumn":31,"suggestions":"101"},{"ruleId":"85","replacedBy":"102"},{"ruleId":"87","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'updatePosition'. Either include it or remove the dependency array. Mutable values like 'ref.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["106"],["104"],["105"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch, updatePosition]",{"range":"109","text":"110"},[2898,2921],"[dispatch, updatePosition]"]